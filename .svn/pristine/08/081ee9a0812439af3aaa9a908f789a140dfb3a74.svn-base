package com.sjy.controller;


import com.sjy.dao.UserDao;
import com.sjy.dao.UserOrderMainDao;
import com.sjy.entity.*;
import com.sjy.service.EntrustOrderService;
import com.sjy.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;


/**
 * Created by Administrator on 2019/5/16.
 */
@RequestMapping("/entrustOrder")
@Controller
public class EntrustOrderController {


    @Autowired
    private EntrustOrderService entrustOrderService;
    @Autowired
    private UserService userService;
    @Autowired
    private UserDao userDao;
    @Autowired
    private UserOrderMainDao userOrderMainDao;

    /**
     * 进入委托管理列表
     * @param model
     * @param userOrder
     * @return
     */
    @RequestMapping(value = "/index", method = RequestMethod.GET)
    public String index(Model model, UserOrder userOrder) {
        model.addAttribute("userOrder", userOrder);
        return "userOrder/entrust";
    }

    /**
     * 获取委托管理列表
     * @param response
     * @param userOrder
     * @param page
     * @param limit
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "/getOrderEntrustList", method = RequestMethod.POST)
    public String getAdminList(HttpServletRequest request, HttpServletResponse response, EntrustOrder entrustOrder, Integer page, Integer limit) {
    	String result=null;
    	//获取当前登录admin对象
    	Admin admin = (Admin) request.getSession().getAttribute("stockManageAdmin");
    	Integer adminId = admin.getAdminId();
    	Integer parentId = admin.getParentId();
    	if(admin.getAdminLevel() ==0){
    	result = entrustOrderService.selectOrderEntrustList(entrustOrder, page, limit);
    	}else {
    		result = entrustOrderService.getEntrustOrderList(entrustOrder, page, limit,adminId);
    	}
        return result;
    }

    /**
     * 撤单
     */
    @ResponseBody
    @RequestMapping(value = "/revoke", method = RequestMethod.POST)
    public Map<String,String> revoke(HttpServletRequest request, Model model, Integer orderId) throws IOException {
        Map<String, String> map = new HashMap<String, String>();
        UserOrder userOrder = entrustOrderService.getOrderById(orderId);
        userOrder.setEntrustTime(new Date());
        User user = userDao.getUserInfoById(userOrder.getUserId());
        user.setUserId(userOrder.getUserId());
        System.out.println(userOrder.getOrderParticipationType());
        if(userOrder.getOrderParticipationType() == 2){
            Double expendableFund = userOrder.getOrderBuyer() * userOrder.getOrderNumber();
            user.setUserExpendableFund(user.getUserExpendableFund() + expendableFund);
        }else if(userOrder.getOrderParticipationType() == 3){
            UserOrderMain main = userOrderMainDao.getUserOrderMainById(userOrder.getId());
            if (main != null) {
                int number = userOrder.getOrderNumber().intValue();
                main.setAllowSellNumber(main.getAllowSellNumber() + number);
                userOrderMainDao.updateUserOrderMain(main);
            }
        }
        userOrder.setOrderParticipationType(5);
        userService.updateUser(user);
        int falg = entrustOrderService.updateUserOrder(userOrder);
        if(falg>0){
            map.put("code", "0");
            map.put("msg", "success");
        }else{
            map.put("code", "1");
            map.put("msg", "error");
        }
        return map;
    }
}
