package com.sjy.api;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.sjy.entity.CapitalDetails;
import com.sjy.entity.FlowRecord;
import com.sjy.service.CapitalDetailsService;
import com.sjy.service.FlowRecordService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

/**
 * 资金api
 * @author wxh
 *
 */
@Api(tags="资金相关接口")
@RestController
@CrossOrigin
@RequestMapping("/api/money")
public class MoneyApiController {
	@Autowired
	private CapitalDetailsService capitalDetailsService;  //充值提现
	@Autowired
	private FlowRecordService flowRecordService;//资金流水
	/**
	 * 充值
	 * @return
	 */
	@ApiOperation(value="充值接口")
	@ApiImplicitParam(name="details",value="对象",required=true,dataType="CapitalDetails")
	@RequestMapping(value="/rechange",method=RequestMethod.POST)
	public String recharge(CapitalDetails details) {
		return capitalDetailsService.recharge(details);
	}
	/**
	 * 提现
	 * @return
	 */
	@ApiOperation(value="提现接口")
	@ApiImplicitParam(name="details",value="对象",required=true,dataType="CapitalDetails")
	@RequestMapping(value="/withdraw",method=RequestMethod.POST)
	public String withdraw(CapitalDetails details) {
		return capitalDetailsService.withdraw(details);
	}
	/**
	 * 充值提现列表   
	 * @return
	 */
	@ApiOperation(value="充值提现列表 接口")
	@ApiImplicitParams({
		@ApiImplicitParam(name="details",value="对象",required=true,dataType="CapitalDetails"),
		@ApiImplicitParam(name="page",value="当前页数",required=false,dataType="Integer"),
		@ApiImplicitParam(name="limit",value="每页条数",required=false,dataType="Integer")
	})
	@RequestMapping(value="/getRechargeAndWithDraw",method=RequestMethod.POST)
	public String getRechargeAndWithDraw(CapitalDetails details,Integer page,Integer limit) {
		return capitalDetailsService.getRechargeWithDrawList(details, page, limit);
	}
	/**
	 * 资金明细   : 获取流水表
	 * @return
	 */
	@ApiOperation(value="资金明细接口")
	@ApiImplicitParams({
		@ApiImplicitParam(name="record",value="对象",required=true,dataType="FlowRecord"),
		@ApiImplicitParam(name="page",value="当前页数",required=false,dataType="Integer"),
		@ApiImplicitParam(name="limit",value="每页条数",required=false,dataType="Integer")
	})
	@RequestMapping("/details")
	public String details(FlowRecord record,Integer page,Integer limit) {
		return flowRecordService.getFlowRecordList(record, page, limit);
	}

	/**
	 * 用户预警线,平仓线
	 * @return
	 */
	@ApiOperation(value="获取用户预警线平仓线接口")
	@ApiImplicitParam(name="userId",value="用户id",required=true,dataType="Integer")
	@RequestMapping(value="/withInformation",method=RequestMethod.POST)
	public String selectUserWithInformation(Integer userId) {
		return capitalDetailsService.selectUserWithInformation(userId);
	}
}
